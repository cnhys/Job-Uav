package com.vt.fencing.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ZlnfGraindepotHisExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    public ZlnfGraindepotHisExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andGraindcodeIsNull() {
            addCriterion("GRAINDCODE is null");
            return (Criteria) this;
        }

        public Criteria andGraindcodeIsNotNull() {
            addCriterion("GRAINDCODE is not null");
            return (Criteria) this;
        }

        public Criteria andGraindcodeEqualTo(String value) {
            addCriterion("GRAINDCODE =", value, "graindcode");
            return (Criteria) this;
        }

        public Criteria andGraindcodeNotEqualTo(String value) {
            addCriterion("GRAINDCODE <>", value, "graindcode");
            return (Criteria) this;
        }

        public Criteria andGraindcodeGreaterThan(String value) {
            addCriterion("GRAINDCODE >", value, "graindcode");
            return (Criteria) this;
        }

        public Criteria andGraindcodeGreaterThanOrEqualTo(String value) {
            addCriterion("GRAINDCODE >=", value, "graindcode");
            return (Criteria) this;
        }

        public Criteria andGraindcodeLessThan(String value) {
            addCriterion("GRAINDCODE <", value, "graindcode");
            return (Criteria) this;
        }

        public Criteria andGraindcodeLessThanOrEqualTo(String value) {
            addCriterion("GRAINDCODE <=", value, "graindcode");
            return (Criteria) this;
        }

        public Criteria andGraindcodeLike(String value) {
            addCriterion("GRAINDCODE like", value, "graindcode");
            return (Criteria) this;
        }

        public Criteria andGraindcodeNotLike(String value) {
            addCriterion("GRAINDCODE not like", value, "graindcode");
            return (Criteria) this;
        }

        public Criteria andGraindcodeIn(List<String> values) {
            addCriterion("GRAINDCODE in", values, "graindcode");
            return (Criteria) this;
        }

        public Criteria andGraindcodeNotIn(List<String> values) {
            addCriterion("GRAINDCODE not in", values, "graindcode");
            return (Criteria) this;
        }

        public Criteria andGraindcodeBetween(String value1, String value2) {
            addCriterion("GRAINDCODE between", value1, value2, "graindcode");
            return (Criteria) this;
        }

        public Criteria andGraindcodeNotBetween(String value1, String value2) {
            addCriterion("GRAINDCODE not between", value1, value2, "graindcode");
            return (Criteria) this;
        }

        public Criteria andFoodcodeIsNull() {
            addCriterion("FOODCODE is null");
            return (Criteria) this;
        }

        public Criteria andFoodcodeIsNotNull() {
            addCriterion("FOODCODE is not null");
            return (Criteria) this;
        }

        public Criteria andFoodcodeEqualTo(String value) {
            addCriterion("FOODCODE =", value, "foodcode");
            return (Criteria) this;
        }

        public Criteria andFoodcodeNotEqualTo(String value) {
            addCriterion("FOODCODE <>", value, "foodcode");
            return (Criteria) this;
        }

        public Criteria andFoodcodeGreaterThan(String value) {
            addCriterion("FOODCODE >", value, "foodcode");
            return (Criteria) this;
        }

        public Criteria andFoodcodeGreaterThanOrEqualTo(String value) {
            addCriterion("FOODCODE >=", value, "foodcode");
            return (Criteria) this;
        }

        public Criteria andFoodcodeLessThan(String value) {
            addCriterion("FOODCODE <", value, "foodcode");
            return (Criteria) this;
        }

        public Criteria andFoodcodeLessThanOrEqualTo(String value) {
            addCriterion("FOODCODE <=", value, "foodcode");
            return (Criteria) this;
        }

        public Criteria andFoodcodeLike(String value) {
            addCriterion("FOODCODE like", value, "foodcode");
            return (Criteria) this;
        }

        public Criteria andFoodcodeNotLike(String value) {
            addCriterion("FOODCODE not like", value, "foodcode");
            return (Criteria) this;
        }

        public Criteria andFoodcodeIn(List<String> values) {
            addCriterion("FOODCODE in", values, "foodcode");
            return (Criteria) this;
        }

        public Criteria andFoodcodeNotIn(List<String> values) {
            addCriterion("FOODCODE not in", values, "foodcode");
            return (Criteria) this;
        }

        public Criteria andFoodcodeBetween(String value1, String value2) {
            addCriterion("FOODCODE between", value1, value2, "foodcode");
            return (Criteria) this;
        }

        public Criteria andFoodcodeNotBetween(String value1, String value2) {
            addCriterion("FOODCODE not between", value1, value2, "foodcode");
            return (Criteria) this;
        }

        public Criteria andFoodkindIsNull() {
            addCriterion("FOODKIND is null");
            return (Criteria) this;
        }

        public Criteria andFoodkindIsNotNull() {
            addCriterion("FOODKIND is not null");
            return (Criteria) this;
        }

        public Criteria andFoodkindEqualTo(String value) {
            addCriterion("FOODKIND =", value, "foodkind");
            return (Criteria) this;
        }

        public Criteria andFoodkindNotEqualTo(String value) {
            addCriterion("FOODKIND <>", value, "foodkind");
            return (Criteria) this;
        }

        public Criteria andFoodkindGreaterThan(String value) {
            addCriterion("FOODKIND >", value, "foodkind");
            return (Criteria) this;
        }

        public Criteria andFoodkindGreaterThanOrEqualTo(String value) {
            addCriterion("FOODKIND >=", value, "foodkind");
            return (Criteria) this;
        }

        public Criteria andFoodkindLessThan(String value) {
            addCriterion("FOODKIND <", value, "foodkind");
            return (Criteria) this;
        }

        public Criteria andFoodkindLessThanOrEqualTo(String value) {
            addCriterion("FOODKIND <=", value, "foodkind");
            return (Criteria) this;
        }

        public Criteria andFoodkindLike(String value) {
            addCriterion("FOODKIND like", value, "foodkind");
            return (Criteria) this;
        }

        public Criteria andFoodkindNotLike(String value) {
            addCriterion("FOODKIND not like", value, "foodkind");
            return (Criteria) this;
        }

        public Criteria andFoodkindIn(List<String> values) {
            addCriterion("FOODKIND in", values, "foodkind");
            return (Criteria) this;
        }

        public Criteria andFoodkindNotIn(List<String> values) {
            addCriterion("FOODKIND not in", values, "foodkind");
            return (Criteria) this;
        }

        public Criteria andFoodkindBetween(String value1, String value2) {
            addCriterion("FOODKIND between", value1, value2, "foodkind");
            return (Criteria) this;
        }

        public Criteria andFoodkindNotBetween(String value1, String value2) {
            addCriterion("FOODKIND not between", value1, value2, "foodkind");
            return (Criteria) this;
        }

        public Criteria andFoodlevelIsNull() {
            addCriterion("FOODLEVEL is null");
            return (Criteria) this;
        }

        public Criteria andFoodlevelIsNotNull() {
            addCriterion("FOODLEVEL is not null");
            return (Criteria) this;
        }

        public Criteria andFoodlevelEqualTo(String value) {
            addCriterion("FOODLEVEL =", value, "foodlevel");
            return (Criteria) this;
        }

        public Criteria andFoodlevelNotEqualTo(String value) {
            addCriterion("FOODLEVEL <>", value, "foodlevel");
            return (Criteria) this;
        }

        public Criteria andFoodlevelGreaterThan(String value) {
            addCriterion("FOODLEVEL >", value, "foodlevel");
            return (Criteria) this;
        }

        public Criteria andFoodlevelGreaterThanOrEqualTo(String value) {
            addCriterion("FOODLEVEL >=", value, "foodlevel");
            return (Criteria) this;
        }

        public Criteria andFoodlevelLessThan(String value) {
            addCriterion("FOODLEVEL <", value, "foodlevel");
            return (Criteria) this;
        }

        public Criteria andFoodlevelLessThanOrEqualTo(String value) {
            addCriterion("FOODLEVEL <=", value, "foodlevel");
            return (Criteria) this;
        }

        public Criteria andFoodlevelLike(String value) {
            addCriterion("FOODLEVEL like", value, "foodlevel");
            return (Criteria) this;
        }

        public Criteria andFoodlevelNotLike(String value) {
            addCriterion("FOODLEVEL not like", value, "foodlevel");
            return (Criteria) this;
        }

        public Criteria andFoodlevelIn(List<String> values) {
            addCriterion("FOODLEVEL in", values, "foodlevel");
            return (Criteria) this;
        }

        public Criteria andFoodlevelNotIn(List<String> values) {
            addCriterion("FOODLEVEL not in", values, "foodlevel");
            return (Criteria) this;
        }

        public Criteria andFoodlevelBetween(String value1, String value2) {
            addCriterion("FOODLEVEL between", value1, value2, "foodlevel");
            return (Criteria) this;
        }

        public Criteria andFoodlevelNotBetween(String value1, String value2) {
            addCriterion("FOODLEVEL not between", value1, value2, "foodlevel");
            return (Criteria) this;
        }

        public Criteria andWaterIsNull() {
            addCriterion("WATER is null");
            return (Criteria) this;
        }

        public Criteria andWaterIsNotNull() {
            addCriterion("WATER is not null");
            return (Criteria) this;
        }

        public Criteria andWaterEqualTo(Double value) {
            addCriterion("WATER =", value, "water");
            return (Criteria) this;
        }

        public Criteria andWaterNotEqualTo(Double value) {
            addCriterion("WATER <>", value, "water");
            return (Criteria) this;
        }

        public Criteria andWaterGreaterThan(Double value) {
            addCriterion("WATER >", value, "water");
            return (Criteria) this;
        }

        public Criteria andWaterGreaterThanOrEqualTo(Double value) {
            addCriterion("WATER >=", value, "water");
            return (Criteria) this;
        }

        public Criteria andWaterLessThan(Double value) {
            addCriterion("WATER <", value, "water");
            return (Criteria) this;
        }

        public Criteria andWaterLessThanOrEqualTo(Double value) {
            addCriterion("WATER <=", value, "water");
            return (Criteria) this;
        }

        public Criteria andWaterIn(List<Double> values) {
            addCriterion("WATER in", values, "water");
            return (Criteria) this;
        }

        public Criteria andWaterNotIn(List<Double> values) {
            addCriterion("WATER not in", values, "water");
            return (Criteria) this;
        }

        public Criteria andWaterBetween(Double value1, Double value2) {
            addCriterion("WATER between", value1, value2, "water");
            return (Criteria) this;
        }

        public Criteria andWaterNotBetween(Double value1, Double value2) {
            addCriterion("WATER not between", value1, value2, "water");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("PRICE is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(Double value) {
            addCriterion("PRICE =", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(Double value) {
            addCriterion("PRICE <>", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(Double value) {
            addCriterion("PRICE >", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("PRICE >=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(Double value) {
            addCriterion("PRICE <", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(Double value) {
            addCriterion("PRICE <=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<Double> values) {
            addCriterion("PRICE in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<Double> values) {
            addCriterion("PRICE not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(Double value1, Double value2) {
            addCriterion("PRICE between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(Double value1, Double value2) {
            addCriterion("PRICE not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNull() {
            addCriterion("CREATOR is null");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNotNull() {
            addCriterion("CREATOR is not null");
            return (Criteria) this;
        }

        public Criteria andCreatorEqualTo(String value) {
            addCriterion("CREATOR =", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotEqualTo(String value) {
            addCriterion("CREATOR <>", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThan(String value) {
            addCriterion("CREATOR >", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThanOrEqualTo(String value) {
            addCriterion("CREATOR >=", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLessThan(String value) {
            addCriterion("CREATOR <", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLessThanOrEqualTo(String value) {
            addCriterion("CREATOR <=", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLike(String value) {
            addCriterion("CREATOR like", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotLike(String value) {
            addCriterion("CREATOR not like", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorIn(List<String> values) {
            addCriterion("CREATOR in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotIn(List<String> values) {
            addCriterion("CREATOR not in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorBetween(String value1, String value2) {
            addCriterion("CREATOR between", value1, value2, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotBetween(String value1, String value2) {
            addCriterion("CREATOR not between", value1, value2, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatedonutcIsNull() {
            addCriterion("CREATEDONUTC is null");
            return (Criteria) this;
        }

        public Criteria andCreatedonutcIsNotNull() {
            addCriterion("CREATEDONUTC is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedonutcEqualTo(Date value) {
            addCriterionForJDBCDate("CREATEDONUTC =", value, "createdonutc");
            return (Criteria) this;
        }

        public Criteria andCreatedonutcNotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATEDONUTC <>", value, "createdonutc");
            return (Criteria) this;
        }

        public Criteria andCreatedonutcGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATEDONUTC >", value, "createdonutc");
            return (Criteria) this;
        }

        public Criteria andCreatedonutcGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATEDONUTC >=", value, "createdonutc");
            return (Criteria) this;
        }

        public Criteria andCreatedonutcLessThan(Date value) {
            addCriterionForJDBCDate("CREATEDONUTC <", value, "createdonutc");
            return (Criteria) this;
        }

        public Criteria andCreatedonutcLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATEDONUTC <=", value, "createdonutc");
            return (Criteria) this;
        }

        public Criteria andCreatedonutcIn(List<Date> values) {
            addCriterionForJDBCDate("CREATEDONUTC in", values, "createdonutc");
            return (Criteria) this;
        }

        public Criteria andCreatedonutcNotIn(List<Date> values) {
            addCriterionForJDBCDate("CREATEDONUTC not in", values, "createdonutc");
            return (Criteria) this;
        }

        public Criteria andCreatedonutcBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATEDONUTC between", value1, value2, "createdonutc");
            return (Criteria) this;
        }

        public Criteria andCreatedonutcNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATEDONUTC not between", value1, value2, "createdonutc");
            return (Criteria) this;
        }

        public Criteria andIsdeletedIsNull() {
            addCriterion("ISDELETED is null");
            return (Criteria) this;
        }

        public Criteria andIsdeletedIsNotNull() {
            addCriterion("ISDELETED is not null");
            return (Criteria) this;
        }

        public Criteria andIsdeletedEqualTo(String value) {
            addCriterion("ISDELETED =", value, "isdeleted");
            return (Criteria) this;
        }

        public Criteria andIsdeletedNotEqualTo(String value) {
            addCriterion("ISDELETED <>", value, "isdeleted");
            return (Criteria) this;
        }

        public Criteria andIsdeletedGreaterThan(String value) {
            addCriterion("ISDELETED >", value, "isdeleted");
            return (Criteria) this;
        }

        public Criteria andIsdeletedGreaterThanOrEqualTo(String value) {
            addCriterion("ISDELETED >=", value, "isdeleted");
            return (Criteria) this;
        }

        public Criteria andIsdeletedLessThan(String value) {
            addCriterion("ISDELETED <", value, "isdeleted");
            return (Criteria) this;
        }

        public Criteria andIsdeletedLessThanOrEqualTo(String value) {
            addCriterion("ISDELETED <=", value, "isdeleted");
            return (Criteria) this;
        }

        public Criteria andIsdeletedLike(String value) {
            addCriterion("ISDELETED like", value, "isdeleted");
            return (Criteria) this;
        }

        public Criteria andIsdeletedNotLike(String value) {
            addCriterion("ISDELETED not like", value, "isdeleted");
            return (Criteria) this;
        }

        public Criteria andIsdeletedIn(List<String> values) {
            addCriterion("ISDELETED in", values, "isdeleted");
            return (Criteria) this;
        }

        public Criteria andIsdeletedNotIn(List<String> values) {
            addCriterion("ISDELETED not in", values, "isdeleted");
            return (Criteria) this;
        }

        public Criteria andIsdeletedBetween(String value1, String value2) {
            addCriterion("ISDELETED between", value1, value2, "isdeleted");
            return (Criteria) this;
        }

        public Criteria andIsdeletedNotBetween(String value1, String value2) {
            addCriterion("ISDELETED not between", value1, value2, "isdeleted");
            return (Criteria) this;
        }

        public Criteria andModifierIsNull() {
            addCriterion("MODIFIER is null");
            return (Criteria) this;
        }

        public Criteria andModifierIsNotNull() {
            addCriterion("MODIFIER is not null");
            return (Criteria) this;
        }

        public Criteria andModifierEqualTo(String value) {
            addCriterion("MODIFIER =", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierNotEqualTo(String value) {
            addCriterion("MODIFIER <>", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierGreaterThan(String value) {
            addCriterion("MODIFIER >", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierGreaterThanOrEqualTo(String value) {
            addCriterion("MODIFIER >=", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierLessThan(String value) {
            addCriterion("MODIFIER <", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierLessThanOrEqualTo(String value) {
            addCriterion("MODIFIER <=", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierLike(String value) {
            addCriterion("MODIFIER like", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierNotLike(String value) {
            addCriterion("MODIFIER not like", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierIn(List<String> values) {
            addCriterion("MODIFIER in", values, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierNotIn(List<String> values) {
            addCriterion("MODIFIER not in", values, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierBetween(String value1, String value2) {
            addCriterion("MODIFIER between", value1, value2, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierNotBetween(String value1, String value2) {
            addCriterion("MODIFIER not between", value1, value2, "modifier");
            return (Criteria) this;
        }

        public Criteria andUpdatedonutcIsNull() {
            addCriterion("UPDATEDONUTC is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedonutcIsNotNull() {
            addCriterion("UPDATEDONUTC is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedonutcEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATEDONUTC =", value, "updatedonutc");
            return (Criteria) this;
        }

        public Criteria andUpdatedonutcNotEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATEDONUTC <>", value, "updatedonutc");
            return (Criteria) this;
        }

        public Criteria andUpdatedonutcGreaterThan(Date value) {
            addCriterionForJDBCDate("UPDATEDONUTC >", value, "updatedonutc");
            return (Criteria) this;
        }

        public Criteria andUpdatedonutcGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATEDONUTC >=", value, "updatedonutc");
            return (Criteria) this;
        }

        public Criteria andUpdatedonutcLessThan(Date value) {
            addCriterionForJDBCDate("UPDATEDONUTC <", value, "updatedonutc");
            return (Criteria) this;
        }

        public Criteria andUpdatedonutcLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATEDONUTC <=", value, "updatedonutc");
            return (Criteria) this;
        }

        public Criteria andUpdatedonutcIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATEDONUTC in", values, "updatedonutc");
            return (Criteria) this;
        }

        public Criteria andUpdatedonutcNotIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATEDONUTC not in", values, "updatedonutc");
            return (Criteria) this;
        }

        public Criteria andUpdatedonutcBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATEDONUTC between", value1, value2, "updatedonutc");
            return (Criteria) this;
        }

        public Criteria andUpdatedonutcNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATEDONUTC not between", value1, value2, "updatedonutc");
            return (Criteria) this;
        }

        public Criteria andImportdateIsNull() {
            addCriterion("IMPORTDATE is null");
            return (Criteria) this;
        }

        public Criteria andImportdateIsNotNull() {
            addCriterion("IMPORTDATE is not null");
            return (Criteria) this;
        }

        public Criteria andImportdateEqualTo(Date value) {
            addCriterionForJDBCDate("IMPORTDATE =", value, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("IMPORTDATE <>", value, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateGreaterThan(Date value) {
            addCriterionForJDBCDate("IMPORTDATE >", value, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("IMPORTDATE >=", value, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateLessThan(Date value) {
            addCriterionForJDBCDate("IMPORTDATE <", value, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("IMPORTDATE <=", value, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateIn(List<Date> values) {
            addCriterionForJDBCDate("IMPORTDATE in", values, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("IMPORTDATE not in", values, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("IMPORTDATE between", value1, value2, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("IMPORTDATE not between", value1, value2, "importdate");
            return (Criteria) this;
        }

        public Criteria andDatatypeIsNull() {
            addCriterion("DATATYPE is null");
            return (Criteria) this;
        }

        public Criteria andDatatypeIsNotNull() {
            addCriterion("DATATYPE is not null");
            return (Criteria) this;
        }

        public Criteria andDatatypeEqualTo(String value) {
            addCriterion("DATATYPE =", value, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeNotEqualTo(String value) {
            addCriterion("DATATYPE <>", value, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeGreaterThan(String value) {
            addCriterion("DATATYPE >", value, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeGreaterThanOrEqualTo(String value) {
            addCriterion("DATATYPE >=", value, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeLessThan(String value) {
            addCriterion("DATATYPE <", value, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeLessThanOrEqualTo(String value) {
            addCriterion("DATATYPE <=", value, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeLike(String value) {
            addCriterion("DATATYPE like", value, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeNotLike(String value) {
            addCriterion("DATATYPE not like", value, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeIn(List<String> values) {
            addCriterion("DATATYPE in", values, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeNotIn(List<String> values) {
            addCriterion("DATATYPE not in", values, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeBetween(String value1, String value2) {
            addCriterion("DATATYPE between", value1, value2, "datatype");
            return (Criteria) this;
        }

        public Criteria andDatatypeNotBetween(String value1, String value2) {
            addCriterion("DATATYPE not between", value1, value2, "datatype");
            return (Criteria) this;
        }

        public Criteria andGrainnumIsNull() {
            addCriterion("GRAINNUM is null");
            return (Criteria) this;
        }

        public Criteria andGrainnumIsNotNull() {
            addCriterion("GRAINNUM is not null");
            return (Criteria) this;
        }

        public Criteria andGrainnumEqualTo(Double value) {
            addCriterion("GRAINNUM =", value, "grainnum");
            return (Criteria) this;
        }

        public Criteria andGrainnumNotEqualTo(Double value) {
            addCriterion("GRAINNUM <>", value, "grainnum");
            return (Criteria) this;
        }

        public Criteria andGrainnumGreaterThan(Double value) {
            addCriterion("GRAINNUM >", value, "grainnum");
            return (Criteria) this;
        }

        public Criteria andGrainnumGreaterThanOrEqualTo(Double value) {
            addCriterion("GRAINNUM >=", value, "grainnum");
            return (Criteria) this;
        }

        public Criteria andGrainnumLessThan(Double value) {
            addCriterion("GRAINNUM <", value, "grainnum");
            return (Criteria) this;
        }

        public Criteria andGrainnumLessThanOrEqualTo(Double value) {
            addCriterion("GRAINNUM <=", value, "grainnum");
            return (Criteria) this;
        }

        public Criteria andGrainnumIn(List<Double> values) {
            addCriterion("GRAINNUM in", values, "grainnum");
            return (Criteria) this;
        }

        public Criteria andGrainnumNotIn(List<Double> values) {
            addCriterion("GRAINNUM not in", values, "grainnum");
            return (Criteria) this;
        }

        public Criteria andGrainnumBetween(Double value1, Double value2) {
            addCriterion("GRAINNUM between", value1, value2, "grainnum");
            return (Criteria) this;
        }

        public Criteria andGrainnumNotBetween(Double value1, Double value2) {
            addCriterion("GRAINNUM not between", value1, value2, "grainnum");
            return (Criteria) this;
        }

        public Criteria andFoodkindcodeIsNull() {
            addCriterion("FOODKINDCODE is null");
            return (Criteria) this;
        }

        public Criteria andFoodkindcodeIsNotNull() {
            addCriterion("FOODKINDCODE is not null");
            return (Criteria) this;
        }

        public Criteria andFoodkindcodeEqualTo(String value) {
            addCriterion("FOODKINDCODE =", value, "foodkindcode");
            return (Criteria) this;
        }

        public Criteria andFoodkindcodeNotEqualTo(String value) {
            addCriterion("FOODKINDCODE <>", value, "foodkindcode");
            return (Criteria) this;
        }

        public Criteria andFoodkindcodeGreaterThan(String value) {
            addCriterion("FOODKINDCODE >", value, "foodkindcode");
            return (Criteria) this;
        }

        public Criteria andFoodkindcodeGreaterThanOrEqualTo(String value) {
            addCriterion("FOODKINDCODE >=", value, "foodkindcode");
            return (Criteria) this;
        }

        public Criteria andFoodkindcodeLessThan(String value) {
            addCriterion("FOODKINDCODE <", value, "foodkindcode");
            return (Criteria) this;
        }

        public Criteria andFoodkindcodeLessThanOrEqualTo(String value) {
            addCriterion("FOODKINDCODE <=", value, "foodkindcode");
            return (Criteria) this;
        }

        public Criteria andFoodkindcodeLike(String value) {
            addCriterion("FOODKINDCODE like", value, "foodkindcode");
            return (Criteria) this;
        }

        public Criteria andFoodkindcodeNotLike(String value) {
            addCriterion("FOODKINDCODE not like", value, "foodkindcode");
            return (Criteria) this;
        }

        public Criteria andFoodkindcodeIn(List<String> values) {
            addCriterion("FOODKINDCODE in", values, "foodkindcode");
            return (Criteria) this;
        }

        public Criteria andFoodkindcodeNotIn(List<String> values) {
            addCriterion("FOODKINDCODE not in", values, "foodkindcode");
            return (Criteria) this;
        }

        public Criteria andFoodkindcodeBetween(String value1, String value2) {
            addCriterion("FOODKINDCODE between", value1, value2, "foodkindcode");
            return (Criteria) this;
        }

        public Criteria andFoodkindcodeNotBetween(String value1, String value2) {
            addCriterion("FOODKINDCODE not between", value1, value2, "foodkindcode");
            return (Criteria) this;
        }

        public Criteria andFoodlevelcodeIsNull() {
            addCriterion("FOODLEVELCODE is null");
            return (Criteria) this;
        }

        public Criteria andFoodlevelcodeIsNotNull() {
            addCriterion("FOODLEVELCODE is not null");
            return (Criteria) this;
        }

        public Criteria andFoodlevelcodeEqualTo(String value) {
            addCriterion("FOODLEVELCODE =", value, "foodlevelcode");
            return (Criteria) this;
        }

        public Criteria andFoodlevelcodeNotEqualTo(String value) {
            addCriterion("FOODLEVELCODE <>", value, "foodlevelcode");
            return (Criteria) this;
        }

        public Criteria andFoodlevelcodeGreaterThan(String value) {
            addCriterion("FOODLEVELCODE >", value, "foodlevelcode");
            return (Criteria) this;
        }

        public Criteria andFoodlevelcodeGreaterThanOrEqualTo(String value) {
            addCriterion("FOODLEVELCODE >=", value, "foodlevelcode");
            return (Criteria) this;
        }

        public Criteria andFoodlevelcodeLessThan(String value) {
            addCriterion("FOODLEVELCODE <", value, "foodlevelcode");
            return (Criteria) this;
        }

        public Criteria andFoodlevelcodeLessThanOrEqualTo(String value) {
            addCriterion("FOODLEVELCODE <=", value, "foodlevelcode");
            return (Criteria) this;
        }

        public Criteria andFoodlevelcodeLike(String value) {
            addCriterion("FOODLEVELCODE like", value, "foodlevelcode");
            return (Criteria) this;
        }

        public Criteria andFoodlevelcodeNotLike(String value) {
            addCriterion("FOODLEVELCODE not like", value, "foodlevelcode");
            return (Criteria) this;
        }

        public Criteria andFoodlevelcodeIn(List<String> values) {
            addCriterion("FOODLEVELCODE in", values, "foodlevelcode");
            return (Criteria) this;
        }

        public Criteria andFoodlevelcodeNotIn(List<String> values) {
            addCriterion("FOODLEVELCODE not in", values, "foodlevelcode");
            return (Criteria) this;
        }

        public Criteria andFoodlevelcodeBetween(String value1, String value2) {
            addCriterion("FOODLEVELCODE between", value1, value2, "foodlevelcode");
            return (Criteria) this;
        }

        public Criteria andFoodlevelcodeNotBetween(String value1, String value2) {
            addCriterion("FOODLEVELCODE not between", value1, value2, "foodlevelcode");
            return (Criteria) this;
        }

        public Criteria andBusystateIsNull() {
            addCriterion("BUSYSTATE is null");
            return (Criteria) this;
        }

        public Criteria andBusystateIsNotNull() {
            addCriterion("BUSYSTATE is not null");
            return (Criteria) this;
        }

        public Criteria andBusystateEqualTo(String value) {
            addCriterion("BUSYSTATE =", value, "busystate");
            return (Criteria) this;
        }

        public Criteria andBusystateNotEqualTo(String value) {
            addCriterion("BUSYSTATE <>", value, "busystate");
            return (Criteria) this;
        }

        public Criteria andBusystateGreaterThan(String value) {
            addCriterion("BUSYSTATE >", value, "busystate");
            return (Criteria) this;
        }

        public Criteria andBusystateGreaterThanOrEqualTo(String value) {
            addCriterion("BUSYSTATE >=", value, "busystate");
            return (Criteria) this;
        }

        public Criteria andBusystateLessThan(String value) {
            addCriterion("BUSYSTATE <", value, "busystate");
            return (Criteria) this;
        }

        public Criteria andBusystateLessThanOrEqualTo(String value) {
            addCriterion("BUSYSTATE <=", value, "busystate");
            return (Criteria) this;
        }

        public Criteria andBusystateLike(String value) {
            addCriterion("BUSYSTATE like", value, "busystate");
            return (Criteria) this;
        }

        public Criteria andBusystateNotLike(String value) {
            addCriterion("BUSYSTATE not like", value, "busystate");
            return (Criteria) this;
        }

        public Criteria andBusystateIn(List<String> values) {
            addCriterion("BUSYSTATE in", values, "busystate");
            return (Criteria) this;
        }

        public Criteria andBusystateNotIn(List<String> values) {
            addCriterion("BUSYSTATE not in", values, "busystate");
            return (Criteria) this;
        }

        public Criteria andBusystateBetween(String value1, String value2) {
            addCriterion("BUSYSTATE between", value1, value2, "busystate");
            return (Criteria) this;
        }

        public Criteria andBusystateNotBetween(String value1, String value2) {
            addCriterion("BUSYSTATE not between", value1, value2, "busystate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated do_not_delete_during_merge Thu Sep 21 10:46:47 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ZLNF_GRAINDEPOTHIS
     *
     * @mbggenerated Thu Sep 21 10:46:47 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}