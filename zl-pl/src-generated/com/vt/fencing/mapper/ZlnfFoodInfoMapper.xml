<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vt.fencing.client.ZlnfFoodInfoMapper" >
  <resultMap id="BaseResultMap" type="com.vt.fencing.model.ZlnfFoodInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 17:09:32 CST 2017.
    -->
    <result column="FMZT" property="fmzt" jdbcType="CHAR" />
    <result column="YORN" property="yorn" jdbcType="CHAR" />
    <result column="FOODCODE" property="foodcode" jdbcType="VARCHAR" />
    <result column="FOODNAME" property="foodname" jdbcType="VARCHAR" />
    <result column="FOODNAMEJC" property="foodnamejc" jdbcType="VARCHAR" />
    <result column="LINKNAME" property="linkname" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="CJSJ" property="cjsj" jdbcType="VARCHAR" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="NBBM" property="nbbm" jdbcType="VARCHAR" />
    <result column="LKZZJGDM" property="lkzzjgdm" jdbcType="VARCHAR" />
    <result column="LNG" property="lng" jdbcType="VARCHAR" />
    <result column="LAT" property="lat" jdbcType="VARCHAR" />
    <result column="BUSYSTATE" property="busystate" jdbcType="CHAR" />
    <result column="ISDELETED" property="isdeleted" jdbcType="CHAR" />
    <result column="PROVICE" property="provice" jdbcType="VARCHAR" />
    <result column="PROVICECODE" property="provicecode" jdbcType="VARCHAR" />
    <result column="CITY" property="city" jdbcType="VARCHAR" />
    <result column="CITYCODE" property="citycode" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 17:09:32 CST 2017.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 17:09:32 CST 2017.
    -->
    FMZT, YORN, FOODCODE, FOODNAME, FOODNAMEJC, LINKNAME, PHONE, CJSJ, ADDRESS, NBBM, 
    LKZZJGDM, LNG, LAT, BUSYSTATE, ISDELETED, PROVICE, PROVICECODE, CITY, CITYCODE, REMARKS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.vt.fencing.model.ZlnfFoodInfoExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 17:09:32 CST 2017.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ZLNF_FOODINFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <insert id="insert" parameterType="com.vt.fencing.model.ZlnfFoodInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 17:09:32 CST 2017.
    -->
    insert into ZLNF_FOODINFO (FMZT, YORN, FOODCODE, 
      FOODNAME, FOODNAMEJC, LINKNAME, 
      PHONE, CJSJ, ADDRESS, 
      NBBM, LKZZJGDM, LNG, 
      LAT, BUSYSTATE, ISDELETED, 
      PROVICE, PROVICECODE, CITY, 
      CITYCODE, REMARKS)
    values (#{fmzt,jdbcType=CHAR}, #{yorn,jdbcType=CHAR}, #{foodcode,jdbcType=VARCHAR}, 
      #{foodname,jdbcType=VARCHAR}, #{foodnamejc,jdbcType=VARCHAR}, #{linkname,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{cjsj,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{nbbm,jdbcType=VARCHAR}, #{lkzzjgdm,jdbcType=VARCHAR}, #{lng,jdbcType=VARCHAR}, 
      #{lat,jdbcType=VARCHAR}, #{busystate,jdbcType=CHAR}, #{isdeleted,jdbcType=CHAR}, 
      #{provice,jdbcType=VARCHAR}, #{provicecode,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{citycode,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.vt.fencing.model.ZlnfFoodInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 17:09:32 CST 2017.
    -->
    insert into ZLNF_FOODINFO
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fmzt != null" >
        FMZT,
      </if>
      <if test="yorn != null" >
        YORN,
      </if>
      <if test="foodcode != null" >
        FOODCODE,
      </if>
      <if test="foodname != null" >
        FOODNAME,
      </if>
      <if test="foodnamejc != null" >
        FOODNAMEJC,
      </if>
      <if test="linkname != null" >
        LINKNAME,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="cjsj != null" >
        CJSJ,
      </if>
      <if test="address != null" >
        ADDRESS,
      </if>
      <if test="nbbm != null" >
        NBBM,
      </if>
      <if test="lkzzjgdm != null" >
        LKZZJGDM,
      </if>
      <if test="lng != null" >
        LNG,
      </if>
      <if test="lat != null" >
        LAT,
      </if>
      <if test="busystate != null" >
        BUSYSTATE,
      </if>
      <if test="isdeleted != null" >
        ISDELETED,
      </if>
      <if test="provice != null" >
        PROVICE,
      </if>
      <if test="provicecode != null" >
        PROVICECODE,
      </if>
      <if test="city != null" >
        CITY,
      </if>
      <if test="citycode != null" >
        CITYCODE,
      </if>
      <if test="remarks != null" >
        REMARKS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fmzt != null" >
        #{fmzt,jdbcType=CHAR},
      </if>
      <if test="yorn != null" >
        #{yorn,jdbcType=CHAR},
      </if>
      <if test="foodcode != null" >
        #{foodcode,jdbcType=VARCHAR},
      </if>
      <if test="foodname != null" >
        #{foodname,jdbcType=VARCHAR},
      </if>
      <if test="foodnamejc != null" >
        #{foodnamejc,jdbcType=VARCHAR},
      </if>
      <if test="linkname != null" >
        #{linkname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="cjsj != null" >
        #{cjsj,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="nbbm != null" >
        #{nbbm,jdbcType=VARCHAR},
      </if>
      <if test="lkzzjgdm != null" >
        #{lkzzjgdm,jdbcType=VARCHAR},
      </if>
      <if test="lng != null" >
        #{lng,jdbcType=VARCHAR},
      </if>
      <if test="lat != null" >
        #{lat,jdbcType=VARCHAR},
      </if>
      <if test="busystate != null" >
        #{busystate,jdbcType=CHAR},
      </if>
      <if test="isdeleted != null" >
        #{isdeleted,jdbcType=CHAR},
      </if>
      <if test="provice != null" >
        #{provice,jdbcType=VARCHAR},
      </if>
      <if test="provicecode != null" >
        #{provicecode,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="citycode != null" >
        #{citycode,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vt.fencing.model.ZlnfFoodInfoExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 18 17:09:32 CST 2017.
    -->
    select count(*) from ZLNF_FOODINFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="queryEightfood" parameterType="com.vt.fencing.model.ZlnfFoodInfo" resultType="com.vt.fencing.model.ZlnfFoodInfo">
  	SELECT c.FOODNAME,c.FOODNAMEJC,c.FOODCODE,c.LNG,c.LAT FROM (
		SELECT a.FOODNAME,a.FOODNAMEJC,a.FOODCODE,a.LNG,a.LAT, 1 row_num FROM ZLNF_FOODINFO a WHERE a.FOODCODE=#{foodcode,jdbcType=VARCHAR}
		UNION 
		select b.FOODNAME,b.FOODNAMEJC,b.FOODCODE,b.LNG,b.LAT, "TO_NUMBER"(b.row_num)+1 row_num from(
		select a.FOODNAME,a.FOODNAMEJC,a.FOODCODE,a.LNG,a.LAT,rownum row_num from(
		SELECT 
			(to_number(e.USERLNG)-to_number(e.LNG))*(to_number(e.USERLNG)-to_number(e.LNG))+
			(to_number(e.USERLAT)-to_number(e.LAT))*(to_number(e.USERLAT)-to_number(e.LAT)) distance,
			e.FOODNAME, e.FOODNAMEJC, e.FOODCODE, e.LNG, e.LAT
			FROM(SELECT 
				c.FOODNAME, c.FOODNAMEJC, c.FOODCODE, c.LNG, c.LAT,
				(SELECT b.LNG FROM ZLNF_COOPUSER a 
				INNER JOIN ZLNF_COOPINFO b ON a.COOPCODE=b.COOPCODE WHERE a.USERCODE=#{usercode,jdbcType=VARCHAR}) userlng,
				(SELECT b.LAT FROM ZLNF_COOPUSER a 
				INNER JOIN ZLNF_COOPINFO b ON a.COOPCODE=b.COOPCODE WHERE a.USERCODE=#{usercode,jdbcType=VARCHAR}) userlat
				FROM ZLNF_FOODINFO c WHERE 
				c.PROVICECODE=(
				SELECT b.PROVICECODE FROM ZLNF_COOPUSER a INNER JOIN ZLNF_COOPINFO b ON a.COOPCODE=b.COOPCODE 
				WHERE a.USERCODE=#{usercode,jdbcType=VARCHAR}) AND c.FOODCODE!=#{foodcode,jdbcType=VARCHAR}) e ORDER BY distance ASC
		) a) b where b.row_num between 1 and 7) c ORDER BY c.row_num ASC
  </select>
  <select id="queryEightfood1" parameterType="com.vt.fencing.model.ZlnfFoodInfo" resultType="com.vt.fencing.model.ZlnfFoodInfo">
  	SELECT c.FOODNAME,c.FOODNAMEJC,c.FOODCODE,c.LNG,c.LAT FROM(
		select b.FOODNAME,b.FOODNAMEJC,b.FOODCODE,b.LNG,b.LAT, b.row_num from(
		select a.FOODNAME,a.FOODNAMEJC,a.FOODCODE,a.LNG,a.LAT,rownum row_num from(
		SELECT 
			(to_number(e.USERLNG)-to_number(e.LNG))*(to_number(e.USERLNG)-to_number(e.LNG))+
			(to_number(e.USERLAT)-to_number(e.LAT))*(to_number(e.USERLAT)-to_number(e.LAT)) distance,
			e.FOODNAME, e.FOODNAMEJC, e.FOODCODE, e.LNG, e.LAT
			FROM(SELECT 
				c.FOODNAME, c.FOODNAMEJC, c.FOODCODE, c.LNG, c.LAT,
				(SELECT b.LNG FROM ZLNF_COOPUSER a 
				INNER JOIN ZLNF_COOPINFO b ON a.COOPCODE=b.COOPCODE WHERE a.USERCODE=#{usercode,jdbcType=VARCHAR}) userlng,
				(SELECT b.LAT FROM ZLNF_COOPUSER a 
				INNER JOIN ZLNF_COOPINFO b ON a.COOPCODE=b.COOPCODE WHERE a.USERCODE=#{usercode,jdbcType=VARCHAR}) userlat
				FROM ZLNF_FOODINFO c WHERE 
				c.PROVICECODE=(
				SELECT b.PROVICECODE FROM ZLNF_COOPUSER a INNER JOIN ZLNF_COOPINFO b ON a.COOPCODE=b.COOPCODE 
				WHERE a.USERCODE=#{usercode,jdbcType=VARCHAR})) e ORDER BY distance ASC
		) a) b where b.row_num between 1 and 8) c
  </select>
</mapper>